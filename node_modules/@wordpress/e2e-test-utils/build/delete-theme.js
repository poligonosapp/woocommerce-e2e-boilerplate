"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deleteTheme = deleteTheme;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _activateTheme = require("./activate-theme");

var _installTheme = require("./install-theme");

var _switchUserToAdmin = require("./switch-user-to-admin");

var _switchUserToTest = require("./switch-user-to-test");

var _visitAdminPage = require("./visit-admin-page");

var _themeInstalled = require("./theme-installed");

/**
 * Internal dependencies
 */

/**
 * Deletes a theme from the site, activating another theme if necessary.
 *
 * @param {string} slug Theme slug.
 * @param {Object?} settings Optional settings object.
 * @param {string?} settings.newThemeSlug A theme to switch to if the theme to delete is active. Required if the theme to delete is active.
 * @param {string?} settings.newThemeSearchTerm A search term to use if the new theme is not findable by its slug.
 */
function deleteTheme(_x) {
  return _deleteTheme.apply(this, arguments);
}

function _deleteTheme() {
  _deleteTheme = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(slug) {
    var _ref,
        newThemeSlug,
        newThemeSearchTerm,
        _args = arguments;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, newThemeSlug = _ref.newThemeSlug, newThemeSearchTerm = _ref.newThemeSearchTerm;
            _context.next = 3;
            return (0, _switchUserToAdmin.switchUserToAdmin)();

          case 3:
            if (!newThemeSlug) {
              _context.next = 10;
              break;
            }

            _context.next = 6;
            return (0, _installTheme.installTheme)(newThemeSlug, newThemeSearchTerm);

          case 6:
            _context.next = 8;
            return (0, _activateTheme.activateTheme)(newThemeSlug);

          case 8:
            _context.next = 12;
            break;

          case 10:
            _context.next = 12;
            return (0, _visitAdminPage.visitAdminPage)('themes.php');

          case 12:
            _context.next = 14;
            return (0, _themeInstalled.isThemeInstalled)(slug);

          case 14:
            if (_context.sent) {
              _context.next = 18;
              break;
            }

            _context.next = 17;
            return (0, _switchUserToTest.switchUserToTest)();

          case 17:
            return _context.abrupt("return");

          case 18:
            _context.next = 20;
            return page.click("[data-slug=\"".concat(slug, "\"]"));

          case 20:
            _context.next = 22;
            return page.waitForSelector('.theme-actions .delete-theme');

          case 22:
            _context.next = 24;
            return page.click('.theme-actions .delete-theme');

          case 24:
            _context.next = 26;
            return page.waitForSelector('body:not(.modal-open)');

          case 26:
            _context.next = 28;
            return page.waitFor(function (themeSlug) {
              return !document.querySelector("[data-slug=\"".concat(themeSlug, "\"]"));
            }, slug);

          case 28:
            _context.next = 30;
            return (0, _switchUserToTest.switchUserToTest)();

          case 30:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _deleteTheme.apply(this, arguments);
}
//# sourceMappingURL=delete-theme.js.map