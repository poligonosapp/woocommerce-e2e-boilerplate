"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRemoveExpression = exports.getQtyInputExpression = exports.getQtyColumnExpression = exports.getProductColumnExpression = exports.getCartItemExpression = void 0;

const getProductColumnExpression = productTitle => 'td[@class="product-name" and ' + `a[contains(text(), "${productTitle}")]` + ']';

exports.getProductColumnExpression = getProductColumnExpression;

const getQtyColumnExpression = args => 'td[@class="product-quantity" and ' + './/' + getQtyInputExpression(args) + ']';

exports.getQtyColumnExpression = getQtyColumnExpression;

const getQtyInputExpression = function () {
  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let qtyValue = '';

  if (args.checkQty) {
    qtyValue = ` and @value="${args.qty}"`;
  }

  return 'input[contains(@class, "input-text")' + qtyValue + ']';
};

exports.getQtyInputExpression = getQtyInputExpression;

const getCartItemExpression = (productTitle, args) => '//tr[contains(@class, "cart_item") and ' + getProductColumnExpression(productTitle) + ' and ' + getQtyColumnExpression(args) + ']';

exports.getCartItemExpression = getCartItemExpression;

const getRemoveExpression = () => 'td[@class="product-remove"]//a[@class="remove"]';

exports.getRemoveExpression = getRemoveExpression;
//# sourceMappingURL=expressions.js.map