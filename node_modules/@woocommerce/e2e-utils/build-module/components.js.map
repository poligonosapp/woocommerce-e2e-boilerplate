{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-utils/src/components.js"],"names":["merchant","IS_RETEST_MODE","uiUnblocked","verifyCheckboxIsUnset","setCheckbox","unsetCheckbox","evalAndClick","backboneUnblocked","waitForSelectorWithoutThrow","factories","waitForTimeout","withRestApi","Coupon","Order","client","api","withDefaultPermalinks","config","require","simpleProductName","get","simpleProductPrice","has","defaultVariableProduct","defaultGroupedProduct","verifyAndPublish","noticeText","expect","page","toClick","waitForSelector","toMatchElement","text","waitAndClickPrimary","waitForNetworkIdle","click","waitForNavigation","waitUntil","completeOnboardingWizard","runSetupWizard","toFill","usageTrackingHeader","$","continueButtons","$$","toHaveLength","industryCheckboxes","i","productTypesCheckboxes","waitFor","selectControls","welcomeHeader","b","createSimpleProduct","productTitle","productPrice","additionalProps","newProduct","name","regularPrice","product","products","simple","create","id","createSimpleProductWithCategory","productName","categoryName","categoryId","createProductCategory","categories","isVirtual","createVariableProduct","varProduct","attributes","variable","variations","buffer","aIdx","createVariation","options","isLastAttribute","length","forEach","opt","push","option","pop","virtual","weight","dimensions","width","height","manage_stock","v","variation","productId","createGroupedProduct","groupedProduct","groupedProducts","simpleProductIds","groupedProductRequest","simpleProduct","grouped","createOrder","orderOptions","newOrder","status","customerId","customer_id","customerBilling","billing","customerShipping","shipping","line_items","product_id","lineItems","repository","restRepository","order","createSimpleOrder","orderStatus","openNewOrder","title","resolves","toMatch","toSelect","variablePostId","variablePostIdValue","getProperty","jsonValue","batchCreateOrders","statuses","defaultOrder","path","orders","map","s","payload","response","post","toEqual","addProductToOrder","orderId","goToOrder","timeout","createCoupon","couponAmount","discountType","couponType","couponCode","Date","getTime","toString","code","amount","addShippingZoneAndMethod","zoneName","zoneLocation","zipCode","zoneMethod","openNewShipping","clickUpdateOrder","waitForSave","deleteAllEmailLogs","openEmailLog","Promise","all","deleteAllShippingZones","openSettings","zone","evaluate","document","querySelector","style","left","error"],"mappings":"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","sourcesContent":["/**\n * @format\n */\n\n/**\n * Internal dependencies\n */\nimport { merchant, IS_RETEST_MODE } from './flows';\nimport {\n\tuiUnblocked,\n\tverifyCheckboxIsUnset,\n\tsetCheckbox,\n\tunsetCheckbox,\n\tevalAndClick,\n\tbackboneUnblocked,\n\twaitForSelectorWithoutThrow,\n} from './page-utils';\nimport factories from './factories';\nimport { waitForTimeout } from './flows/utils';\nimport { withRestApi } from './flows/with-rest-api';\nimport { Coupon, Order } from '@woocommerce/api';\n\nconst client = factories.api.withDefaultPermalinks;\nconst config = require( 'config' );\nconst simpleProductName = config.get( 'products.simple.name' );\nconst simpleProductPrice = config.has('products.simple.price') ? config.get('products.simple.price') : '9.99';\nconst defaultVariableProduct = config.get('products.variable');\nconst defaultGroupedProduct = config.get('products.grouped');\n\n/**\n * Verify and publish\n *\n * @param noticeText The text that appears in the notice after publishing.\n */\nconst verifyAndPublish = async ( noticeText ) => {\n\t// Wait for auto save\n\tawait waitForTimeout( 2000 );\n\n\t// Publish product\n\tawait expect( page ).toClick( '#publish' );\n\tawait page.waitForSelector( '.updated.notice' );\n\n\t// Verify\n\tawait expect( page ).toMatchElement( '.updated.notice', { text: noticeText } );\n};\n\n/**\n * Wait for primary button to be enabled and click.\n *\n * @param waitForNetworkIdle - Wait for network idle after click\n * @returns {Promise<void>}\n */\nconst waitAndClickPrimary = async ( waitForNetworkIdle = true ) => {\n\t// Wait for \"Continue\" button to become active\n\tawait page.waitForSelector( 'button.is-primary:not(:disabled)' );\n\tawait page.click( 'button.is-primary' );\n\tif ( waitForNetworkIdle ) {\n\t\tawait page.waitForNavigation( { waitUntil: 'networkidle0' } );\n\t}\n};\n/**\n * Complete onboarding wizard.\n */\nconst completeOnboardingWizard = async () => {\n\t// Store Details section\n\tawait merchant.runSetupWizard();\n\n\t// Fill store's address - first line\n\tawait expect( page ).toFill( '#inspector-text-control-0', config.get( 'addresses.admin.store.addressfirstline' ) );\n\n\t// Fill store's address - second line\n\tawait expect( page ).toFill( '#inspector-text-control-1', config.get( 'addresses.admin.store.addresssecondline' ) );\n\n\t// Fill country and state where the store is located\n\tawait expect( page ).toFill( '.woocommerce-select-control__control-input', config.get( 'addresses.admin.store.countryandstate' ) );\n\n\t// Fill the city where the store is located\n\tawait expect( page ).toFill( '#inspector-text-control-2', config.get( 'addresses.admin.store.city' ) );\n\n\t// Fill postcode of the store\n\tawait expect( page ).toFill( '#inspector-text-control-3', config.get( 'addresses.admin.store.postcode' ) );\n\n\t// Verify that checkbox next to \"I'm setting up a store for a client\" is not selected\n\tawait verifyCheckboxIsUnset( '.components-checkbox-control__input' );\n\n\t// Wait for \"Continue\" button to become active\n\tawait page.waitForSelector( 'button.is-primary:not(:disabled)' );\n\n\t// Click on \"Continue\" button to move to the next step\n\tawait page.click( 'button.is-primary', { text: 'Continue' } );\n\n\t// Wait for usage tracking pop-up window to appear on a new site\n\tconst usageTrackingHeader = await page.$('.components-modal__header-heading');\n\tif ( usageTrackingHeader ) {\n\t\tawait expect(page).toMatchElement(\n\t\t\t'.components-modal__header-heading', {text: 'Build a better WooCommerce'}\n\t\t);\n\n\t\t// Query for \"No Thanks\" buttons\n\t\tconst continueButtons = await page.$$( '.woocommerce-usage-modal__actions button.is-secondary' );\n\t\texpect( continueButtons ).toHaveLength( 1 );\n\n\t\tawait continueButtons[0].click();\n\t}\n\tawait page.waitForNavigation( { waitUntil: 'networkidle0' } );\n\n\t// Industry section\n\n\t// Query for the industries checkboxes\n\tconst industryCheckboxes = await page.$$( '.components-checkbox-control__input' );\n\texpect( industryCheckboxes ).toHaveLength( 8 );\n\n\t// Select all industries including \"Other\"\n\tfor ( let i = 0; i < 8; i++ ) {\n\t\tawait industryCheckboxes[i].click();\n\t}\n\n\t// Fill \"Other\" industry\n\tawait expect( page ).toFill( '.components-text-control__input', config.get( 'onboardingwizard.industry' ) );\n\n\t// Wait for \"Continue\" button to become active\n\tawait waitAndClickPrimary();\n\n\t// Product types section\n\n\t// Query for the product types checkboxes\n\tconst productTypesCheckboxes = await page.$$( '.components-checkbox-control__input' );\n\texpect( productTypesCheckboxes ).toHaveLength( 7 );\n\n\t// Select Physical and Downloadable products\n\tfor ( let i = 1; i < 2; i++ ) {\n\t\tawait productTypesCheckboxes[i].click();\n\t}\n\n\t// Wait for \"Continue\" button to become active\n\tawait waitAndClickPrimary();\n\n\t// Business Details section\n\n\t// Temporarily add delay to reduce test flakiness\n\tawait page.waitFor( 2000 );\n\n\t// Query for the <SelectControl>s\n\tconst selectControls = await page.$$( '.woocommerce-select-control' );\n\texpect( selectControls ).toHaveLength( 2 );\n\n\t// Fill the number of products you plan to sell\n\tawait selectControls[0].click();\n\tawait page.waitForSelector( '.woocommerce-select-control__control' );\n\tawait expect( page ).toClick( '.woocommerce-select-control__option', { text: config.get( 'onboardingwizard.numberofproducts' ) } );\n\n\t// Fill currently selling elsewhere\n\tawait selectControls[1].click();\n\tawait page.waitForSelector( '.woocommerce-select-control__control' );\n\tawait expect( page ).toClick( '.woocommerce-select-control__option', { text: config.get( 'onboardingwizard.sellingelsewhere' ) } );\n\n\t// Wait for \"Continue\" button to become active\n\tawait waitAndClickPrimary( false );\n\n\t// Skip installing extensions\n\tawait unsetCheckbox( '.components-checkbox-control__input' );\n\tawait verifyCheckboxIsUnset( '.components-checkbox-control__input' );\n\tawait waitAndClickPrimary();\n\n\t// Theme section\n\tawait waitAndClickPrimary();\n\n\t// End of onboarding wizard\n\tif ( IS_RETEST_MODE ) {\n\t\t// Home screen modal can't be reset via the rest api.\n\t\treturn;\n\t}\n\n\t// Wait for homescreen welcome modal to appear\n\tlet welcomeHeader = await waitForSelectorWithoutThrow( '.woocommerce__welcome-modal__page-content' );\n\tif ( ! welcomeHeader ) {\n\t\treturn;\n\t}\n\n\t// Click two Next buttons\n\tfor ( let b = 0; b < 2; b++ ) {\n\t\tawait page.waitForSelector('button.components-guide__forward-button');\n\t\tawait page.click('button.components-guide__forward-button');\n\t}\n\t// Wait for \"Let's go\" button to become active\n\tawait page.waitForSelector( 'button.components-guide__finish-button' );\n\tawait page.click( 'button.components-guide__finish-button' );\n};\n\n/**\n * Create simple product.\n *\n * @param {string} productTitle Defaults to Simple Product. Customizable title.\n * @param {string} productPrice Defaults to $9.99. Customizable pricing.\n * @param {Object} additionalProps Defaults to nothing. Additional product properties.\n */\nconst createSimpleProduct = async (\n\tproductTitle = simpleProductName,\n\tproductPrice = simpleProductPrice,\n\tadditionalProps = {}\n) => {\n\tconst newProduct = {\n\t\tname: productTitle,\n\t\tregularPrice: productPrice,\n\t\t...additionalProps,\n\t};\n\tconst product = await factories.products.simple.create( newProduct );\n\treturn product.id;\n};\n\n/**\n * Create simple product with categories\n *\n * @param productName Product's name which can be changed when writing a test\n * @param productPrice Product's price which can be changed when writing a test\n * @param categoryName Product's category which can be changed when writing a test\n */\nconst createSimpleProductWithCategory = async ( productName, productPrice, categoryName ) => {\n\t// Get the category ID so we can add it to the product below\n\tconst categoryId = await withRestApi.createProductCategory( categoryName );\n\n\tconst product = await factories.products.simple.create( {\n\t\tname: productName,\n\t\tregularPrice: productPrice,\n\t\tcategories: [\n\t\t\t{\n\t\t\t\tid: categoryId,\n\t\t\t}\n\t\t],\n\t\tisVirtual: true,\n\t} );\n\n\treturn product.id;\n};\n\n/**\n * Create variable product.\n * Also, create variations for all attributes.\n *\n * @param varProduct Defaults to the variable product object in `default.json`\n * @returns the ID of the created variable product\n */\nconst createVariableProduct = async (varProduct = defaultVariableProduct) => {\n\tconst { attributes } = varProduct;\n\tconst { id } = await factories.products.variable.create(varProduct); // create the variable product\n\tconst variations = [];\n\tconst buffer = []; // accumulated attributes while looping\n\tconst aIdx = 0; // attributes[] index\n\n\t// Create variation for all attributes\n\tconst createVariation = (aIdx) => {\n\t\tconst { name, options } = attributes[aIdx];\n\t\tconst isLastAttribute = aIdx === attributes.length - 1;\n\n\t\t// Add each attribute value to the buffer.\n\t\toptions.forEach((opt) => {\n\t\t\tbuffer.push({\n\t\t\t\tname: name,\n\t\t\t\toption: opt\n\t\t\t});\n\n\t\t\tif (isLastAttribute) {\n\t\t\t\t// If this is the last attribute, it means the variation is now complete.\n\t\t\t\t// Save whatever's been accumulated in the buffer to the `variations[]` array.\n\t\t\t\tvariations.push({\n\t\t\t\t\tattributes: [...buffer]\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Otherwise, move to the next attribute first\n\t\t\t\t// before proceeding to the next value in this attribute.\n\t\t\t\tcreateVariation(aIdx + 1);\n\t\t\t}\n\n\t\t\tbuffer.pop();\n\t\t});\n\t};\n\tcreateVariation(aIdx);\n\n\t// Set some properties of 1st variation\n\tvariations[0].regularPrice = '9.99';\n\tvariations[0].virtual = true;\n\n\t// Set some properties of 2nd variation\n\tvariations[1].regularPrice = '11.99';\n\tvariations[1].virtual = true;\n\n\t// Set some properties of 3rd variation\n\tvariations[2].regularPrice = '20';\n\tvariations[2].weight = '200';\n\tvariations[2].dimensions = {\n\t\tlength: '10',\n\t\twidth: '20',\n\t\theight: '15'\n\t};\n\tvariations[2].manage_stock = true;\n\n\t// Use API to create each variation\n\tfor (const v of variations) {\n\t\tawait factories.products.variation.create({\n\t\t\tproductId: id,\n\t\t\tvariation: v\n\t\t});\n\t}\n\n\treturn id;\n};\n\n/**\n * Create grouped product.\n *\n * @param groupedProduct Defaults to the grouped product object in `default.json`\n * @returns ID of the grouped product\n */\nconst createGroupedProduct = async (groupedProduct = defaultGroupedProduct) => {\n\tconst { name, groupedProducts } = groupedProduct;\n\tconst simpleProductIds = [];\n\tlet groupedProductRequest;\n\n\t// Using the api, create simple products to be grouped\n\tfor (const simpleProduct of groupedProducts) {\n\t\tconst { id } = await factories.products.simple.create(simpleProduct);\n\t\tsimpleProductIds.push(id);\n\t}\n\n\t// Using the api, create the grouped product\n\tgroupedProductRequest = {\n\t\tname: name,\n\t\tgroupedProducts: simpleProductIds\n\t};\n\tconst { id } = await factories.products.grouped.create(\n\t\tgroupedProductRequest\n\t);\n\n\treturn id;\n};\n\n/**\n * Use the API to create an order with the provided details.\n *\n * @param {object} orderOptions\n * @returns {Promise<number>} ID of the created order.\n */\nconst createOrder = async ( orderOptions = {} ) => {\n\tconst newOrder = {\n\t\t...( orderOptions.status && { status: orderOptions.status } ),\n\t\t...( orderOptions.customerId && {\n\t\t\tcustomer_id: orderOptions.customerId,\n\t\t} ),\n\t\t...( orderOptions.customerBilling && {\n\t\t\tbilling: orderOptions.customerBilling,\n\t\t} ),\n\t\t...( orderOptions.customerShipping && {\n\t\t\tshipping: orderOptions.customerShipping,\n\t\t} ),\n\t\t...( orderOptions.productId && {\n\t\t\tline_items: [ { product_id: orderOptions.productId } ],\n\t\t} ),\n\t\t...( orderOptions.lineItems && {\n\t\t\tline_items: orderOptions.lineItems,\n\t\t} ),\n\t};\n\n\tconst repository = Order.restRepository( client );\n\tconst order = await repository.create( newOrder );\n\n\treturn order.id;\n};\n\n/**\n * Create a basic order with the provided order status.\n *\n * @param orderStatus Status of the new order. Defaults to `Pending payment`.\n */\nconst createSimpleOrder = async ( orderStatus = 'Pending payment' ) => {\n\t// Go to 'Add new order' page\n\tawait merchant.openNewOrder();\n\n\t// Make sure we're on the add order page\n\tawait expect( page.title() ).resolves.toMatch( 'Add new order' );\n\n\t// Set order status\n\tawait expect( page ).toSelect( '#order_status', orderStatus );\n\n\t// Wait for auto save\n\tawait page.waitFor( 2000 );\n\n\t// Create the order\n\tawait expect( page ).toClick( 'button.save_order' );\n\tawait page.waitForSelector( '#message' );\n\n\t// Verify\n\tawait expect( page ).toMatchElement( '#message', { text: 'Order updated.' } );\n\n\tconst variablePostId = await page.$( '#post_ID' );\n\tlet variablePostIdValue = ( await ( await variablePostId.getProperty( 'value' ) ).jsonValue() );\n\treturn variablePostIdValue;\n};\n\n/**\n * Creates a batch of orders from the given `statuses`\n * using the \"Batch Create Order\" API.\n *\n * @param statuses Array of order statuses\n */\nconst batchCreateOrders = async (statuses) => {\n\tconst defaultOrder = config.get('orders.basicPaidOrder');\n\tconst path = '/wc/v3/orders/batch';\n\n\t// Create an order per status\n\tconst orders = statuses.map((s) => {\n\t\treturn {\n\t\t\t...defaultOrder,\n\t\t\tstatus: s\n\t\t};\n\t});\n\n\t// Set the request payload from the created orders.\n\t// Then send the API request.\n\tconst payload = { create: orders };\n\tconst response = await client.post(path, payload);\n\texpect( response.status ).toEqual(200);\n};\n\n/**\n * Adds a product to an order in the merchant.\n *\n * @param orderId ID of the order to add the product to.\n * @param productName Name of the product being added to the order.\n */\nconst addProductToOrder = async ( orderId, productName ) => {\n\tawait merchant.goToOrder( orderId );\n\n\t// Add a product to the order\n\tawait expect( page ).toClick( 'button.add-line-item' );\n\tawait expect( page ).toClick( 'button.add-order-item' );\n\tawait page.waitForSelector( '.wc-backbone-modal-header' );\n\tawait expect( page ).toClick( '.wc-backbone-modal-content .wc-product-search' );\n\tawait expect( page ).toFill('#wc-backbone-modal-dialog + .select2-container .select2-search__field', productName);\n\tawait page.waitForSelector( 'li[aria-selected=\"true\"]', { timeout: 10000 } );\n\tawait expect( page ).toClick( 'li[aria-selected=\"true\"]' );\n\tawait page.click( '.wc-backbone-modal-content #btn-ok' );\n\n\tawait backboneUnblocked();\n\n\t// Verify the product we added shows as a line item now\n\tawait expect( page ).toMatchElement( '.wc-order-item-name', { text: productName } );\n}\n\n/**\n * Creates a basic coupon with the provided coupon amount. Returns the coupon code.\n *\n * @param couponAmount Amount to be applied. Defaults to 5.\n * @param discountType Type of a coupon. Defaults to Fixed cart discount.\n */\nconst createCoupon = async ( couponAmount = '5', discountType = 'Fixed cart discount' ) => {\n\tlet couponType;\n\tswitch ( discountType ) {\n\t\tcase \"Fixed cart discount\":\n\t\t\tcouponType = 'fixed_cart';\n\t\t\tbreak;\n\t\tcase \"Fixed product discount\":\n\t\t\tcouponType = 'fixed_product';\n\t\t\tbreak;\n\t\tcase \"Percentage discount\":\n\t\t\tcouponType = 'percent';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcouponType = discountType;\n\t}\n\n\t// Fill in coupon code\n\tlet couponCode = 'code-' + couponType + new Date().getTime().toString();\n\tconst repository = Coupon.restRepository( client );\n\tawait repository.create( {\n\t\tcode: couponCode,\n\t\tdiscountType: couponType,\n\t\tamount: couponAmount,\n\t});\n\n\treturn couponCode;\n};\n\n/**\n * Adds a shipping zone along with a shipping method.\n *\n * @param zoneName Shipping zone name.\n * @param zoneLocation Shiping zone location. Defaults to country:US. For states use: state:US:CA\n * @param zipCode Shipping zone zip code. Defaults to empty one space.\n * @param zoneMethod Shipping method type. Defaults to flat_rate (use also: free_shipping or local_pickup)\n */\nconst addShippingZoneAndMethod = async ( zoneName, zoneLocation = 'country:US', zipCode = ' ', zoneMethod = 'flat_rate' ) => {\n\tawait merchant.openNewShipping();\n\n\t// Fill shipping zone name\n\tawait page.waitForSelector('input#zone_name');\n\tawait expect(page).toFill('input#zone_name', zoneName);\n\n\t// Select shipping zone location\n\tawait expect(page).toSelect('select[name=\"zone_locations\"]', zoneLocation);\n\n\tawait uiUnblocked();\n\n\t// Fill shipping zone postcode if needed otherwise just put empty space\n\tawait page.waitForSelector('a.wc-shipping-zone-postcodes-toggle');\n\tawait expect(page).toClick('a.wc-shipping-zone-postcodes-toggle');\n\tawait expect(page).toFill('#zone_postcodes', zipCode);\n\tawait expect(page).toMatchElement('#zone_postcodes', zipCode);\n\tawait expect(page).toClick('button#submit');\n\n\tawait uiUnblocked();\n\n\t// Add shipping zone method\n\tawait page.waitFor(1000);\n\tawait expect(page).toClick('button.wc-shipping-zone-add-method', {text:'Add shipping method'});\n\tawait page.waitForSelector('.wc-shipping-zone-method-selector');\n\tawait expect(page).toSelect('select[name=\"add_method_id\"]', zoneMethod);\n\tawait expect(page).toClick('button#btn-ok');\n\tawait page.waitForSelector('#zone_locations');\n\n\tawait uiUnblocked();\n};\n\n/**\n * Click the Update button on the order details page.\n *\n * @param noticeText The text that appears in the notice after updating the order.\n * @param waitForSave Optionally wait for auto save.\n */\nconst clickUpdateOrder = async ( noticeText, waitForSave = false ) => {\n\tif ( waitForSave ) {\n\t\tawait page.waitFor( 2000 );\n\t}\n\n\t// Update order\n\tawait expect( page ).toClick( 'button.save_order' );\n\tawait page.waitForSelector( '.updated.notice' );\n\n\t// Verify\n\tawait expect( page ).toMatchElement( '.updated.notice', { text: noticeText } );\n};\n\n/**\n * Delete all email logs in the WP Mail Logging plugin page.\n */\nconst deleteAllEmailLogs = async () => {\n\tawait merchant.openEmailLog();\n\n\t// Make sure we have emails to delete. If we don't, this selector will return null.\n\tif ( await page.$( '#bulk-action-selector-top' ) !== null ) {\n\t\tawait setCheckbox( '#cb-select-all-1' );\n\t\tawait expect( page ).toSelect( '#bulk-action-selector-top', 'Delete' );\n\t\tawait Promise.all( [\n\t\t\tpage.click( '#doaction' ),\n\t\t\tpage.waitForNavigation( { waitUntil: 'networkidle0' } ),\n\t\t] );\n\t}\n};\n\n/**\n * Delete all the existing shipping zones.\n */\nconst deleteAllShippingZones = async () => {\n\tawait merchant.openSettings('shipping');\n\n\t// Delete existing shipping zones.\n\ttry {\n\t\tlet zone = await page.$( '.wc-shipping-zone-delete' );\n\t\tif ( zone ) {\n\t\t\t// WP action links aren't clickable because they are hidden with a left=-9999 style.\n\t\t\tawait page.evaluate(() => {\n\t\t\t\tdocument.querySelector('.wc-shipping-zone-name .row-actions')\n\t\t\t\t\t.style\n\t\t\t\t\t.left = '0';\n\t\t\t});\n\t\t\twhile ( zone ) {\n\t\t\t\tawait evalAndClick( '.wc-shipping-zone-delete' );\n\t\t\t\tawait uiUnblocked();\n\t\t\t\tzone = await page.$( '.wc-shipping-zone-delete' );\n\t\t\t};\n\t\t};\n\t} catch (error) {\n\t\t// Prevent an error here causing the test to fail.\n\t};\n};\n\nexport {\n\tcompleteOnboardingWizard,\n\tcreateSimpleProduct,\n\tcreateVariableProduct,\n\tcreateGroupedProduct,\n\tcreateSimpleOrder,\n\tverifyAndPublish,\n\taddProductToOrder,\n\tcreateCoupon,\n\taddShippingZoneAndMethod,\n\tcreateSimpleProductWithCategory,\n\tclickUpdateOrder,\n\tdeleteAllEmailLogs,\n\tdeleteAllShippingZones,\n\tbatchCreateOrders,\n\tcreateOrder,\n};\n"]}