{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/merchant/wp-admin-order-searching.test.js"],"names":["merchant","searchForOrder","createSimpleProduct","factories","createOrder","require","searchString","itemName","customerBilling","first_name","last_name","company","country","address_1","address_2","city","state","postcode","phone","email","customerShipping","updateCustomerBilling","client","api","withDefaultPermalinks","customerEndpoint","customers","get","search","role","data","length","customerId","id","customerData","billing","shipping","put","queries","runOrderSearchingTest","describe","productId","orderId","beforeAll","login","openAllOrdersView","it","toString","each","value","skip","module","exports"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nconst {\n\tmerchant,\n\tsearchForOrder,\n\tcreateSimpleProduct,\n\tfactories,\n\tcreateOrder,\n} = require( '@woocommerce/e2e-utils' );\n\nconst searchString = 'John Doe';\nconst itemName = 'Wanted Product';\n\nconst customerBilling = {\n\tfirst_name: 'John',\n\tlast_name: 'Doe',\n\tcompany: 'Automattic',\n\tcountry: 'US',\n\taddress_1: 'address1',\n\taddress_2: 'address2',\n\tcity: 'San Francisco',\n\tstate: 'CA',\n\tpostcode: '94107',\n\tphone: '123456789',\n\temail: 'john.doe@example.com',\n};\nconst customerShipping = {\n\tfirst_name: 'Tim',\n\tlast_name: 'Clark',\n\tcompany: 'Automattic',\n\tcountry: 'US',\n\taddress_1: 'Oxford Ave',\n\taddress_2: 'Linwood Ave',\n\tcity: 'Buffalo',\n\tstate: 'NY',\n\tpostcode: '14201',\n\tphone: '123456789',\n\temail: 'john.doe@example.com',\n};\n\n/**\n * Set the billing fields for the customer account for this test suite.\n *\n * @returns {Promise<number>}\n */\nconst updateCustomerBilling = async () => {\n\tconst client = factories.api.withDefaultPermalinks;\n\tconst customerEndpoint = 'wc/v3/customers/';\n\tconst customers = await client.get( customerEndpoint, {\n\t\tsearch: 'Jane',\n\t\trole: 'all',\n\t} );\n\tif ( ! customers.data || ! customers.data.length ) {\n\t\treturn;\n\t}\n\n\tconst customerId = customers.data[0].id;\n\tconst customerData = {\n\t\tid: customerId,\n\t\tbilling: customerBilling,\n\t\tshipping: customerShipping,\n\t};\n\tawait client.put( customerEndpoint + customerId, customerData );\n\treturn customerId;\n};\n\n/**\n * Data table to be fed into `it.each()`.\n */\nconst queries = [\n\t[customerBilling.first_name, 'billing first name'],\n\t[customerBilling.last_name, 'billing last name'],\n\t[customerBilling.company, 'billing company name'],\n\t[customerBilling.address_1, 'billing first address'],\n\t[customerBilling.address_2, 'billing second address'],\n\t[customerBilling.city, 'billing city name'],\n\t[customerBilling.postcode, 'billing post code'],\n\t[customerBilling.email, 'billing email'],\n\t[customerBilling.phone, 'billing phone'],\n\t[customerBilling.state, 'billing state'],\n\t[customerShipping.first_name, 'shipping first name'],\n\t[customerShipping.last_name, 'shipping last name'],\n\t[customerShipping.address_1, 'shipping first address'],\n\t[customerShipping.address_2, 'shipping second address'],\n\t[customerShipping.city, 'shipping city name'],\n\t[customerShipping.postcode, 'shipping post code'],\n\t[itemName, 'shipping item name']\n];\n\nconst runOrderSearchingTest = () => {\n\tdescribe('WooCommerce Orders > Search orders', () => {\n\t\tlet productId;\n\t\tlet orderId;\n\t\tlet customerId;\n\n\t\tbeforeAll( async () => {\n\t\t\tproductId = await createSimpleProduct('Wanted Product');\n\t\t\tcustomerId = await updateCustomerBilling();\n\t\t\torderId = await createOrder({\n\t\t\t\tcustomerId,\n\t\t\t\tproductId,\n\t\t\t\tcustomerBilling,\n\t\t\t\tcustomerShipping,\n\t\t\t});\n\n\t\t\t// Login and open All Orders view\n\t\t\tawait merchant.login();\n\t\t\tawait merchant.openAllOrdersView();\n\t\t});\n\n\t\tit('can search for order by order id', async () => {\n\t\t\t// Convert the order ID to string so we can search on it\n\t\t\tawait searchForOrder(orderId.toString(), orderId, searchString);\n\t\t});\n\n\t\tit.each(queries)(\n\t\t\t'can search for order containing \"%s\" as the %s',\n\t\t\tasync (value) => {\n\t\t\t\tawait searchForOrder(value, orderId, searchString);\n\t\t\t}\n\t\t);\n\n\t\t/**\n\t\t * shipping state is abbreviated. This test passes if billing and shipping state are the same\n\t\t */\n\t\tit.skip('can search for order by shipping state name', async () => {\n\t\t\tawait searchForOrder('New York', orderId, searchString);\n\t\t})\n\t});\n};\n\nmodule.exports = runOrderSearchingTest;\n"]}