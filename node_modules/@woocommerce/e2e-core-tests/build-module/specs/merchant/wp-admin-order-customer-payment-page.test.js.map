{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/merchant/wp-admin-order-customer-payment-page.test.js"],"names":["createSimpleProduct","require","merchant","createOrder","config","simpleProductName","get","simpleProductPrice","has","runMerchantOrdersCustomerPaymentPage","orderId","productId","describe","beforeAll","login","it","goToOrder","expect","page","toMatchElement","text","Promise","all","toClick","waitForNavigation","waitUntil","toString","module","exports"],"mappings":"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","sourcesContent":["const { createSimpleProduct } = require( '@woocommerce/e2e-utils' );\n\n/**\n * Internal dependencies\n */\nconst {\n\tmerchant,\n\tcreateOrder,\n} = require( '@woocommerce/e2e-utils' );\n\n// TODO create a function for the logic below getConfigSimpleProduct(), see: https://github.com/woocommerce/woocommerce/issues/29072\nconst config = require( 'config' );\nconst simpleProductName = config.get( 'products.simple.name' );\nconst simpleProductPrice = config.has( 'products.simple.price' ) ? config.get( 'products.simple.price' ) : '9.99';\n\nconst runMerchantOrdersCustomerPaymentPage = () => {\n\tlet orderId;\n\tlet productId;\n\n\tdescribe('WooCommerce Merchant Flow: Orders > Customer Payment Page', () => {\n\t\tbeforeAll(async () => {\n\t\t\tproductId = await createSimpleProduct();\n\t\t\torderId = await createOrder( { productId } );\n\t\t\tawait merchant.login();\n\t\t});\n\n\t\tit('should show the customer payment page link on a pending payment order', async () => {\n\t\t\tawait merchant.goToOrder( orderId );\n\n\t\t\t// Verify the order is still pending payment\n\t\t\tawait expect( page ).toMatchElement( '#order_status', { text: 'Pending payment' } );\n\n\t\t\t// Verify the customer payment page link is displayed\n\t\t\tawait expect(page).toMatchElement( 'label[for=order_status] > a' , { text: 'Customer payment page →' });\n\t\t});\n\n\n\t\tit('should load the customer payment page', async () => {\n\t\t\t// Verify the customer payment page link is displayed\n\t\t\tawait expect(page).toMatchElement( 'label[for=order_status] > a' , { text: 'Customer payment page →' });\n\n\t\t\t// Visit the page\n\t\t\tawait Promise.all([\n\t\t\t\texpect(page).toClick( 'label[for=order_status] > a' ),\n\t\t\t\tpage.waitForNavigation( { waitUntil: 'networkidle0' } ),\n\t\t\t]);\n\n\t\t\t// Verify we landed on the customer payment page\n\t\t\tawait expect(page).toMatchElement( 'h1.entry-title' , { text: 'Pay for order' });\n\t\t\tawait expect(page).toMatchElement( 'td.product-name' , { text: simpleProductName });\n\t\t\tawait expect(page).toMatchElement( 'span.woocommerce-Price-amount.amount' , { text: simpleProductPrice });\n\t\t});\n\n\t\tit('can pay for the order through the customer payment page', async () => {\n\t\t\t// Make sure we're still on the customer payment page\n\t\t\tawait expect(page).toMatchElement( 'h1.entry-title' , { text: 'Pay for order' });\n\n\t\t\t// Pay for the order\n\t\t\tawait Promise.all([\n\t\t\t\texpect(page).toClick( '#place_order'),\n\t\t\t\tpage.waitForNavigation( { waitUntil: 'networkidle0' } ),\n\t\t\t]);\n\n\t\t\t// Verify we landed on the order received page\n\t\t\tawait expect(page).toMatchElement( 'h1.entry-title', { text: 'Order received' });\n\t\t\tawait expect(page).toMatchElement( 'li.woocommerce-order-overview__order.order' , { text: orderId.toString() });\n\t\t\tawait expect(page).toMatchElement( 'span.woocommerce-Price-amount.amount' , { text: simpleProductPrice });\n\t\t});\n\n\t});\n\n};\n\nmodule.exports = runMerchantOrdersCustomerPaymentPage;\n"]}