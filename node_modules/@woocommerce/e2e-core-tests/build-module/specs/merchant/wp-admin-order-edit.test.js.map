{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/merchant/wp-admin-order-edit.test.js"],"names":["merchant","createSimpleOrder","withRestApi","utils","require","orderId","runEditOrderTest","describe","beforeAll","login","afterAll","deleteAllOrders","it","openAllOrdersView","expect","page","title","resolves","toMatch","goToOrder","updateOrderStatus","toMatchElement","text","toFill","waitForTimeout","toClick","waitForSelector","value","module","exports"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nconst {\n\tmerchant,\n\tcreateSimpleOrder,\n\twithRestApi,\n\tutils,\n} = require( '@woocommerce/e2e-utils' );\n\nlet orderId;\n\nconst runEditOrderTest = () => {\n\tdescribe('WooCommerce Orders > Edit order', () => {\n\t\tbeforeAll(async () => {\n\t\t\tawait merchant.login();\n\t\t\torderId = await createSimpleOrder('Processing');\n\t\t});\n\n\t\tafterAll( async () => {\n\t\t\tawait withRestApi.deleteAllOrders();\n\t\t});\n\n\t\tit('can view single order', async () => {\n\t\t\t// Go to \"orders\" page\n\t\t\tawait merchant.openAllOrdersView();\n\n\t\t\t// Make sure we're on the orders page\n\t\t\tawait expect(page.title()).resolves.toMatch('Orders');\n\n\t\t\t//Open order we created\n\t\t\tawait merchant.goToOrder(orderId);\n\n\t\t\t// Make sure we're on the order details page\n\t\t\tawait expect(page.title()).resolves.toMatch('Edit order');\n        });\n\n        it('can update order status', async () => {\n\t\t\t//Open order we created\n\t\t\tawait merchant.goToOrder(orderId);\n\n\t\t\t// Make sure we're still on the order details page\n\t\t\tawait expect(page.title()).resolves.toMatch('Edit order');\n\n\t\t\t// Update order status to `Completed`\n\t\t\tawait merchant.updateOrderStatus(orderId, 'Completed');\n\n\t\t\t// Verify order status changed note added\n\t\t\tawait expect( page ).toMatchElement( '#select2-order_status-container', { text: 'Completed' } );\n\t\t\tawait expect( page ).toMatchElement(\n\t\t\t\t'#woocommerce-order-notes .note_content',\n\t\t\t\t{\n\t\t\t\t\ttext: 'Order status changed from Processing to Completed.',\n\t\t\t\t}\n\t\t\t);\n        });\n\n        it('can update order details', async () => {\n\t\t\t//Open order we created\n\t\t\tawait merchant.goToOrder(orderId);\n\n\t\t\t// Make sure we're still on the order details page\n\t\t\tawait expect(page.title()).resolves.toMatch('Edit order');\n\n\t\t\t// Update order details\n\t\t\tawait expect(page).toFill('input[name=order_date]', '2018-12-14');\n\n\t\t\t// Wait for auto save\n\t\t\tawait utils.waitForTimeout( 2000 );\n\n\t\t\t// Save the order changes\n\t\t\tawait expect( page ).toClick( 'button.save_order' );\n\t\t\tawait page.waitForSelector( '#message' );\n\n\t\t\t// Verify\n\t\t\tawait expect( page ).toMatchElement( '#message', { text: 'Order updated.' } );\n\t\t\tawait expect( page ).toMatchElement( 'input[name=order_date]', { value: '2018-12-14' } );\n\t\t});\n\t});\n}\n\nmodule.exports = runEditOrderTest;\n"]}