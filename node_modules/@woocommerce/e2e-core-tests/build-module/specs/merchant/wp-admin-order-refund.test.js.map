{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/merchant/wp-admin-order-refund.test.js"],"names":["merchant","createSimpleProduct","verifyCheckboxIsSet","verifyValueOfInputField","uiUnblocked","createOrder","clickAndWaitForSelector","require","config","simpleProductPrice","has","get","runRefundOrderTest","describe","productId","orderId","currencySymbol","beforeAll","status","login","goToOrder","page","waitForSelector","currencyElement","$","evaluate","el","textContent","it","expect","toClick","visible","toFill","Promise","all","toMatchElement","text","not","module","exports"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nconst {\n\tmerchant,\n\tcreateSimpleProduct,\n\tverifyCheckboxIsSet,\n\tverifyValueOfInputField,\n\tuiUnblocked,\n\tcreateOrder,\n\tclickAndWaitForSelector,\n} = require( '@woocommerce/e2e-utils' );\n\nconst config = require( 'config' );\nconst simpleProductPrice = config.has('products.simple.price') ? config.get('products.simple.price') : '9.99';\n\nconst runRefundOrderTest = () => {\n\tdescribe('WooCommerce Orders > Refund an order', () => {\n\t\tlet productId;\n\t\tlet orderId;\n\t\tlet currencySymbol;\n\n\t\tbeforeAll(async () => {\n\t\t\tproductId = await createSimpleProduct();\n\t\t\torderId = await createOrder( {\n\t\t\t\tproductId,\n\t\t\t\tstatus: 'completed'\n\t\t\t} );\n\n\t\t\tawait merchant.login();\n\t\t\tawait merchant.goToOrder( orderId );\n\n\t\t\t// Get the currency symbol for the store's selected currency\n\t\t\tawait page.waitForSelector('.woocommerce-Price-currencySymbol');\n\t\t\tlet currencyElement = await page.$('.woocommerce-Price-currencySymbol');\n\t\t\tcurrencySymbol = await page.evaluate(el => el.textContent, currencyElement);\n\t\t});\n\n\t\tit('can issue a refund by quantity', async () => {\n\t\t\t// Click the Refund button\n\t\t\tawait expect(page).toClick('button.refund-items');\n\n\t\t\t// Verify the refund section shows\n\t\t\tawait page.waitForSelector('div.wc-order-refund-items', { visible: true });\n\t\t\tawait verifyCheckboxIsSet('#restock_refunded_items');\n\n\t\t\t// Initiate a refund\n\t\t\tawait expect(page).toFill('.refund_order_item_qty', '1');\n\t\t\tawait expect(page).toFill('#refund_reason', 'No longer wanted');\n\n\t\t\tawait Promise.all([\n\t\t\t\tverifyValueOfInputField('.refund_line_total', simpleProductPrice),\n\t\t\t\tverifyValueOfInputField('#refund_amount', simpleProductPrice),\n\t\t\t\texpect(page).toMatchElement('.do-manual-refund', { text: `Refund ${currencySymbol + simpleProductPrice} manually` }),\n\t\t\t]);\n\n\t\t\tawait clickAndWaitForSelector( '.do-manual-refund', '.quantity .refunded' );\n\t\t\tawait uiUnblocked();\n\n\t\t\tawait Promise.all([\n\t\t\t\t// Verify the product line item shows the refunded quantity and amount\n\t\t\t\texpect(page).toMatchElement('.quantity .refunded', { text: '-1' }),\n\t\t\t\texpect(page).toMatchElement('.line_cost .refunded', { text: `-${currencySymbol + simpleProductPrice}` }),\n\n\t\t\t\t// Verify the refund shows in the list with the amount\n\t\t\t\texpect(page).toMatchElement('.refund .description', { text: 'No longer wanted' }),\n\t\t\t\texpect(page).toMatchElement('.refund > .line_cost', { text: `-${currencySymbol + simpleProductPrice}` }),\n\n\t\t\t\t// Verify system note was added\n\t\t\t\texpect(page).toMatchElement('.system-note', { text: 'Order status changed from Completed to Refunded.' }),\n\t\t\t]);\n\t\t});\n\n\t\tit('can delete an issued refund', async () => {\n\t\t\tawait clickAndWaitForSelector( 'a.delete_refund', '.refund-items' );\n\t\t\tawait uiUnblocked();\n\n\t\t\tawait Promise.all([\n\t\t\t\t// Verify the refunded row item is no longer showing\n\t\t\t\texpect(page).not.toMatchElement('tr.refund', { visible: true }),\n\t\t\t\t// Verify the product line item doesn't show the refunded quantity and amount\n\t\t\t\texpect(page).not.toMatchElement('.quantity .refunded', { text: '-1' }),\n\t\t\t\texpect(page).not.toMatchElement('.line_cost .refunded', { text: `-${currencySymbol + simpleProductPrice}` }),\n\n\t\t\t\t// Verify the refund shows in the list with the amount\n\t\t\t\texpect(page).not.toMatchElement('.refund .description', { text: 'No longer wanted' }),\n\t\t\t\texpect(page).not.toMatchElement('.refund > .line_cost', { text: `-${currencySymbol + simpleProductPrice}` }),\n\t\t\t]);\n\t\t});\n\n\t});\n\n};\n\nmodule.exports = runRefundOrderTest;\n"]}