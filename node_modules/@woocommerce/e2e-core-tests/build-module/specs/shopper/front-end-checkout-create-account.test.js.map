{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/shopper/front-end-checkout-create-account.test.js"],"names":["shopper","merchant","createSimpleProduct","uiUnblocked","setCheckbox","settingsPageSaveChanges","addShippingZoneAndMethod","withRestApi","require","it","describe","beforeAll","config","customerBilling","get","runCheckoutCreateAccountTest","productId","deleteCustomerByEmail","email","login","openSettings","logout","goToShop","addToCartFromShopPage","goToCheckout","fillBillingDetails","placeOrder","expect","page","toMatchElement","text","openAllUsersView","module","exports"],"mappings":"AAAA;AACA;AACA;AACC,MAAM;AACNA,EAAAA,OADM;AAENC,EAAAA,QAFM;AAGNC,EAAAA,mBAHM;AAINC,EAAAA,WAJM;AAKNC,EAAAA,WALM;AAMNC,EAAAA,uBANM;AAONC,EAAAA,wBAPM;AAQNC,EAAAA;AARM,IASHC,OAAO,CAAE,wBAAF,CATV;AAWD;AACA;AACA;;;AACA,MAAM;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,QAAN;AAAgBC,EAAAA;AAAhB,IAA8BH,OAAO,CAAE,eAAF,CAA3C;;AAEA,MAAMI,MAAM,GAAGJ,OAAO,CAAE,QAAF,CAAtB;;AACA,MAAMK,eAAe,GAAGD,MAAM,CAACE,GAAP,CAAY,4BAAZ,CAAxB;;AAEA,MAAMC,4BAA4B,GAAG,MAAM;AAC1CL,EAAAA,QAAQ,CAAC,iCAAD,EAAoC,MAAM;AACjD,QAAIM,SAAJ;AAEAL,IAAAA,SAAS,CAAC,YAAY;AACrBK,MAAAA,SAAS,GAAG,MAAMd,mBAAmB,EAArC;AACA,YAAMK,WAAW,CAACU,qBAAZ,CAAmCJ,eAAe,CAACK,KAAnD,CAAN,CAFqB,CAIrB;;AACA,YAAMjB,QAAQ,CAACkB,KAAT,EAAN;AACA,YAAMlB,QAAQ,CAACmB,YAAT,CAAsB,SAAtB,CAAN;AACA,YAAMhB,WAAW,CAAC,oDAAD,CAAjB;AACA,YAAMC,uBAAuB,EAA7B,CARqB,CAUrB;;AACA,YAAMC,wBAAwB,CAAC,kBAAD,EAAqB,aAArB,EAAoC,GAApC,EAAyC,eAAzC,CAA9B;AAEA,YAAML,QAAQ,CAACoB,MAAT,EAAN,CAbqB,CAerB;;AACA,YAAMrB,OAAO,CAACsB,QAAR,EAAN;AACA,YAAMtB,OAAO,CAACuB,qBAAR,CAA+BP,SAA/B,CAAN;AACA,YAAMb,WAAW,EAAjB;AACA,YAAMH,OAAO,CAACwB,YAAR,EAAN;AACA,KApBQ,EAoBN,KApBM,CAAT;AAsBAf,IAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAY;AACvD;AACA,YAAMT,OAAO,CAACyB,kBAAR,CAA4BZ,eAA5B,CAAN;AACA,YAAMV,WAAW,EAAjB,CAHuD,CAKvD;;AACA,YAAMC,WAAW,CAAC,gBAAD,CAAjB,CANuD,CAQvD;;AACA,YAAMJ,OAAO,CAAC0B,UAAR,EAAN;AACA,YAAMC,MAAM,CAACC,IAAD,CAAN,CAAaC,cAAb,CAA4B,gBAA5B,EAA8C;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA9C,CAAN;AACA,KAXC,CAAF;AAaArB,IAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAY;AAC/D,YAAMR,QAAQ,CAACkB,KAAT,EAAN;AACA,YAAMlB,QAAQ,CAAC8B,gBAAT,EAAN;AACA,YAAMJ,MAAM,CAACC,IAAD,CAAN,CAAaC,cAAb,CAA4B,2BAA5B,EAAyD;AAAEC,QAAAA,IAAI,EAAEjB,eAAe,CAACK;AAAxB,OAAzD,CAAN;AACA,KAJC,CAAF;AAKA,GA3CO,CAAR;AA4CA,CA7CD;;AA+CAc,MAAM,CAACC,OAAP,GAAiBlB,4BAAjB","sourcesContent":["/**\n * Internal dependencies\n */\n const {\n\tshopper,\n\tmerchant,\n\tcreateSimpleProduct,\n\tuiUnblocked,\n\tsetCheckbox,\n\tsettingsPageSaveChanges,\n\taddShippingZoneAndMethod,\n\twithRestApi,\n} = require( '@woocommerce/e2e-utils' );\n\n/**\n * External dependencies\n */\nconst { it, describe, beforeAll } = require( '@jest/globals' );\n\nconst config = require( 'config' );\nconst customerBilling = config.get( 'addresses.customer.billing' );\n\nconst runCheckoutCreateAccountTest = () => {\n\tdescribe('Shopper Checkout Create Account', () => {\n\t\tlet productId;\n\n\t\tbeforeAll(async () => {\n\t\t\tproductId = await createSimpleProduct();\n\t\t\tawait withRestApi.deleteCustomerByEmail( customerBilling.email );\n\n\t\t\t// Set checkbox for creating an account during checkout\n\t\t\tawait merchant.login();\n\t\t\tawait merchant.openSettings('account');\n\t\t\tawait setCheckbox('#woocommerce_enable_signup_and_login_from_checkout');\n\t\t\tawait settingsPageSaveChanges();\n\n\t\t\t// Set free shipping within California\n\t\t\tawait addShippingZoneAndMethod('Free Shipping CA', 'state:US:CA', ' ', 'free_shipping' );\n\n\t\t\tawait merchant.logout();\n\n\t\t\t// Add simple product to cart and proceed to checkout\n\t\t\tawait shopper.goToShop();\n\t\t\tawait shopper.addToCartFromShopPage( productId );\n\t\t\tawait uiUnblocked();\n\t\t\tawait shopper.goToCheckout();\n\t\t}, 45000 );\n\n\t\tit('can create an account during checkout', async () => {\n\t\t\t// Fill all the details for a new customer\n\t\t\tawait shopper.fillBillingDetails( customerBilling );\n\t\t\tawait uiUnblocked();\n\n\t\t\t// Set checkbox for creating account during checkout\n\t\t\tawait setCheckbox('#createaccount');\n\n\t\t\t// Place an order\n\t\t\tawait shopper.placeOrder();\n\t\t\tawait expect(page).toMatchElement('h1.entry-title', {text: 'Order received'});\n\t\t});\n\n\t\tit('can verify that the customer has been created', async () => {\n\t\t\tawait merchant.login();\n\t\t\tawait merchant.openAllUsersView();\n\t\t\tawait expect(page).toMatchElement('td.email.column-email > a', { text: customerBilling.email });\n\t\t});\n\t});\n};\n\nmodule.exports = runCheckoutCreateAccountTest;\n"]}