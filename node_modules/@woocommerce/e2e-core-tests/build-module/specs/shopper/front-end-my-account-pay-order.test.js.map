{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/shopper/front-end-my-account-pay-order.test.js"],"names":["shopper","merchant","createSimpleProduct","uiUnblocked","require","it","describe","beforeAll","afterAll","simplePostIdValue","orderNum","config","simpleProductName","get","runMyAccountPayOrderTest","login","goToProduct","addToCart","goToCheckout","fillBillingDetails","placeOrder","page","$$eval","elements","map","item","textContent","updateOrderStatus","logout","goToOrders","expect","toClick","waitForNavigation","waitUntil","toMatchElement","text","toMatch","module","exports"],"mappings":"AAAA;;AACA;AACA;AACA;AACA,MAAM;AACLA,EAAAA,OADK;AAELC,EAAAA,QAFK;AAGLC,EAAAA,mBAHK;AAILC,EAAAA;AAJK,IAKFC,OAAO,CAAE,wBAAF,CALX;AAOA;AACA;AACA;;;AACA,MAAM;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,QAAN;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA;AAA3B,IAAwCJ,OAAO,CAAE,eAAF,CAArD;;AAEA,IAAIK,iBAAJ;AACA,IAAIC,QAAJ;;AACA,MAAMC,MAAM,GAAGP,OAAO,CAAE,QAAF,CAAtB;;AACA,MAAMQ,iBAAiB,GAAGD,MAAM,CAACE,GAAP,CAAY,sBAAZ,CAA1B;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;AACtCR,EAAAA,QAAQ,CAAC,qDAAD,EAAwD,MAAM;AACrEC,IAAAA,SAAS,CAAC,YAAY;AACrBE,MAAAA,iBAAiB,GAAG,MAAMP,mBAAmB,EAA7C;AACA,YAAMF,OAAO,CAACe,KAAR,EAAN;AACA,YAAMf,OAAO,CAACgB,WAAR,CAAoBP,iBAApB,CAAN;AACA,YAAMT,OAAO,CAACiB,SAAR,CAAkBL,iBAAlB,CAAN;AACA,YAAMZ,OAAO,CAACkB,YAAR,EAAN;AACA,YAAMlB,OAAO,CAACmB,kBAAR,CAA2BR,MAAM,CAACE,GAAP,CAAW,4BAAX,CAA3B,CAAN;AACA,YAAMV,WAAW,EAAjB;AACA,YAAMH,OAAO,CAACoB,UAAR,EAAN,CARqB,CAUrB;;AACAV,MAAAA,QAAQ,GAAG,MAAMW,IAAI,CAACC,MAAL,CAAY,2CAAZ,EAAyDC,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACC,WAA1B,CAArE,CAAjB;AAEA,YAAMzB,QAAQ,CAACc,KAAT,EAAN;AACA,YAAMd,QAAQ,CAAC0B,iBAAT,CAA2BjB,QAA3B,EAAqC,iBAArC,CAAN;AACA,YAAMT,QAAQ,CAAC2B,MAAT,EAAN;AACA,KAhBQ,CAAT;AAkBApB,IAAAA,QAAQ,CAAE,YAAY;AACrB,YAAMR,OAAO,CAAC4B,MAAR,EAAN;AACA,KAFO,CAAR;AAIAvB,IAAAA,EAAE,CAAC,sDAAD,EAAyD,YAAY;AACtE,YAAML,OAAO,CAACe,KAAR,EAAN;AACA,YAAMf,OAAO,CAAC6B,UAAR,EAAN;AACA,YAAMC,MAAM,CAACT,IAAD,CAAN,CAAaU,OAAb,CAAqB,iCAArB,CAAN;AACA,YAAMV,IAAI,CAACW,iBAAL,CAAuB;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAvB,CAAN;AACA,YAAMH,MAAM,CAACT,IAAD,CAAN,CAAaa,cAAb,CAA4B,cAA5B,EAA4C;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA5C,CAAN;AACA,YAAMnC,OAAO,CAACoB,UAAR,EAAN;AACA,YAAMU,MAAM,CAACT,IAAD,CAAN,CAAae,OAAb,CAAqB,gBAArB,CAAN;AACA,KARC,CAAF;AASA,GAhCO,CAAR;AAiCA,CAlCD;;AAoCAC,MAAM,CAACC,OAAP,GAAiBxB,wBAAjB","sourcesContent":["/* eslint-disable jest/no-export, jest/no-disabled-tests */\n/**\n * Internal dependencies\n */\nconst {\n\tshopper,\n\tmerchant,\n\tcreateSimpleProduct,\n\tuiUnblocked\n} = require( '@woocommerce/e2e-utils' );\n\n/**\n * External dependencies\n */\nconst { it, describe, beforeAll, afterAll } = require( '@jest/globals' );\n\nlet simplePostIdValue;\nlet orderNum;\nconst config = require( 'config' );\nconst simpleProductName = config.get( 'products.simple.name' );\n\nconst runMyAccountPayOrderTest = () => {\n\tdescribe('Customer can pay for their order through My Account', () => {\n\t\tbeforeAll(async () => {\n\t\t\tsimplePostIdValue = await createSimpleProduct();\n\t\t\tawait shopper.login();\n\t\t\tawait shopper.goToProduct(simplePostIdValue);\n\t\t\tawait shopper.addToCart(simpleProductName);\n\t\t\tawait shopper.goToCheckout();\n\t\t\tawait shopper.fillBillingDetails(config.get('addresses.customer.billing'));\n\t\t\tawait uiUnblocked();\n\t\t\tawait shopper.placeOrder();\n\n\t\t\t// Get order ID from the order received html element on the page\n\t\t\torderNum = await page.$$eval(\".woocommerce-order-overview__order strong\", elements => elements.map(item => item.textContent));\n\n\t\t\tawait merchant.login();\n\t\t\tawait merchant.updateOrderStatus(orderNum, 'Pending payment');\n\t\t\tawait merchant.logout();\n\t\t});\n\n\t\tafterAll( async () => {\n\t\t\tawait shopper.logout();\n\t\t} );\n\n\t\tit('allows customer to pay for their order in My Account', async () => {\n\t\t\tawait shopper.login();\n\t\t\tawait shopper.goToOrders();\n\t\t\tawait expect(page).toClick('a.woocommerce-button.button.pay');\n\t\t\tawait page.waitForNavigation({waitUntil: 'networkidle0'});\n\t\t\tawait expect(page).toMatchElement('.entry-title', {text: 'Pay for order'});\n\t\t\tawait shopper.placeOrder();\n\t\t\tawait expect(page).toMatch('Order received');\n\t\t});\n\t});\n}\n\nmodule.exports = runMyAccountPayOrderTest;\n"]}