{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/shopper/front-end-order-email-receiving.test.js"],"names":["shopper","merchant","createSimpleProduct","uiUnblocked","deleteAllEmailLogs","require","it","describe","beforeAll","afterAll","simplePostIdValue","orderId","config","simpleProductName","get","customerEmail","storeName","runOrderEmailReceivingTest","login","logout","goToProduct","addToCart","goToCheckout","placeOrder","page","$$eval","elements","map","item","textContent","openEmailLog","expect","toMatchElement","text","module","exports"],"mappings":"AAAA;;AACA;AACA;AACA;AACC,MAAM;AACNA,EAAAA,OADM;AAENC,EAAAA,QAFM;AAGNC,EAAAA,mBAHM;AAINC,EAAAA,WAJM;AAKNC,EAAAA;AALM,IAMHC,OAAO,CAAE,wBAAF,CANV;AAQD;AACA;AACA;;;AACA,MAAM;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,QAAN;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA;AAA3B,IAAwCJ,OAAO,CAAE,eAAF,CAArD;;AAEA,IAAIK,iBAAJ;AACA,IAAIC,OAAJ;;AACA,MAAMC,MAAM,GAAGP,OAAO,CAAE,QAAF,CAAtB;;AACA,MAAMQ,iBAAiB,GAAGD,MAAM,CAACE,GAAP,CAAY,sBAAZ,CAA1B;AACA,MAAMC,aAAa,GAAGH,MAAM,CAACE,GAAP,CAAY,kCAAZ,CAAtB;AACA,MAAME,SAAS,GAAG,iCAAlB;;AAEA,MAAMC,0BAA0B,GAAG,MAAM;AACxCV,EAAAA,QAAQ,CAAC,+BAAD,EAAkC,MAAM;AAC/CC,IAAAA,SAAS,CAAC,YAAY;AACrBE,MAAAA,iBAAiB,GAAG,MAAMR,mBAAmB,EAA7C;AAEA,YAAMD,QAAQ,CAACiB,KAAT,EAAN;AACA,YAAMd,kBAAkB,EAAxB;AACA,YAAMH,QAAQ,CAACkB,MAAT,EAAN;AACA,KANQ,CAAT;AAQAV,IAAAA,QAAQ,CAAE,YAAY;AACrB,YAAMT,OAAO,CAACmB,MAAR,EAAN;AACA,KAFO,CAAR;AAIAb,IAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAY;AACrE,YAAMN,OAAO,CAACkB,KAAR,EAAN,CADqE,CAGrE;;AACA,YAAMlB,OAAO,CAACoB,WAAR,CAAoBV,iBAApB,CAAN;AACA,YAAMV,OAAO,CAACqB,SAAR,CAAkBR,iBAAlB,CAAN;AACA,YAAMb,OAAO,CAACsB,YAAR,EAAN;AACA,YAAMnB,WAAW,EAAjB;AACA,YAAMH,OAAO,CAACuB,UAAR,EAAN,CARqE,CASrE;;AACAZ,MAAAA,OAAO,GAAG,MAAMa,IAAI,CAACC,MAAL,CAAY,2CAAZ,EAAyDC,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACC,WAA1B,CAArE,CAAhB,CAVqE,CAYrE;;AACA,YAAM5B,QAAQ,CAACiB,KAAT,EAAN;AACA,YAAMjB,QAAQ,CAAC6B,YAAT,EAAN;AACA,YAAMC,MAAM,CAAEP,IAAF,CAAN,CAAeQ,cAAf,CAA+B,kBAA/B,EAAmD;AAAEC,QAAAA,IAAI,EAAElB;AAAR,OAAnD,CAAN;AACA,YAAMgB,MAAM,CAAEP,IAAF,CAAN,CAAeQ,cAAf,CAA+B,iBAA/B,EAAkD;AAAEC,QAAAA,IAAI,EAAG,IAAGjB,SAAU,iBAAgBL,OAAQ;AAA9C,OAAlD,CAAN;AACA,KAjBC,CAAF;AAkBA,GA/BO,CAAR;AAgCA,CAjCD;;AAmCAuB,MAAM,CAACC,OAAP,GAAiBlB,0BAAjB","sourcesContent":["/* eslint-disable jest/no-export, jest/no-disabled-tests, jest/expect-expect */\n/**\n * Internal dependencies\n */\n const {\n\tshopper,\n\tmerchant,\n\tcreateSimpleProduct,\n\tuiUnblocked,\n\tdeleteAllEmailLogs,\n} = require( '@woocommerce/e2e-utils' );\n\n/**\n * External dependencies\n */\nconst { it, describe, beforeAll, afterAll } = require( '@jest/globals' );\n\nlet simplePostIdValue;\nlet orderId;\nconst config = require( 'config' );\nconst simpleProductName = config.get( 'products.simple.name' );\nconst customerEmail = config.get( 'addresses.customer.billing.email' );\nconst storeName = 'WooCommerce Core E2E Test Suite';\n\nconst runOrderEmailReceivingTest = () => {\n\tdescribe('Shopper Order Email Receiving', () => {\n\t\tbeforeAll(async () => {\n\t\t\tsimplePostIdValue = await createSimpleProduct();\n\n\t\t\tawait merchant.login();\n\t\t\tawait deleteAllEmailLogs();\n\t\t\tawait merchant.logout();\n\t\t});\n\n\t\tafterAll( async () => {\n\t\t\tawait shopper.logout();\n\t\t} );\n\n\t\tit('should receive order email after purchasing an item', async () => {\n\t\t\tawait shopper.login();\n\n\t\t\t// Go to the shop and purchase an item\n\t\t\tawait shopper.goToProduct(simplePostIdValue);\n\t\t\tawait shopper.addToCart(simpleProductName);\n\t\t\tawait shopper.goToCheckout();\n\t\t\tawait uiUnblocked();\n\t\t\tawait shopper.placeOrder();\n\t\t\t// Get order ID from the order received html element on the page\n\t\t\torderId = await page.$$eval(\".woocommerce-order-overview__order strong\", elements => elements.map(item => item.textContent));\n\n\t\t\t// Verify the new order email has been received\n\t\t\tawait merchant.login();\n\t\t\tawait merchant.openEmailLog();\n\t\t\tawait expect( page ).toMatchElement( '.column-receiver', { text: customerEmail } );\n\t\t\tawait expect( page ).toMatchElement( '.column-subject', { text: `[${storeName}]: New order #${orderId}` } );\n\t\t});\n\t});\n};\n\nmodule.exports = runOrderEmailReceivingTest;\n"]}