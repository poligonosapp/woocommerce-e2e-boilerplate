{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/shopper/front-end-cart.test.js"],"names":["shopper","withRestApi","createSimpleProduct","uiUnblocked","require","it","describe","beforeAll","config","simpleProductName","get","singleProductPrice","has","twoProductPrice","runCartPageTest","productId","resetSettingsGroupToDefault","goToCart","expect","page","toMatchElement","text","goToShop","addToCartFromShopPage","productIsInCart","setCartQuantity","toClick","removeFromCart","Promise","all","waitForNavigation","waitUntil","module","exports"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nconst {\n\tshopper,\n\twithRestApi,\n\tcreateSimpleProduct,\n\tuiUnblocked,\n} = require( '@woocommerce/e2e-utils' );\n\n/**\n * External dependencies\n */\nconst { it, describe, beforeAll } = require( '@jest/globals' );\n\nconst config = require( 'config' );\nconst simpleProductName = config.get( 'products.simple.name' );\nconst singleProductPrice = config.has('products.simple.price') ? config.get('products.simple.price') : '9.99';\nconst twoProductPrice = singleProductPrice * 2;\n\nconst runCartPageTest = () => {\n\tdescribe('Cart page', () => {\n\t\tlet productId;\n\n\t\tbeforeAll(async () => {\n\t\t\tproductId = await createSimpleProduct();\n\t\t\tawait withRestApi.resetSettingsGroupToDefault( 'general', false );\n\t\t\tawait withRestApi.resetSettingsGroupToDefault( 'products', false );\n\t\t\tawait withRestApi.resetSettingsGroupToDefault( 'tax', false );\n\t\t});\n\n\t\tit('should display no item in the cart', async () => {\n\t\t\tawait shopper.goToCart();\n\t\t\tawait expect(page).toMatchElement('.cart-empty', {text: 'Your cart is currently empty.'});\n\t\t});\n\n\t\tit('should add the product to the cart from the shop page', async () => {\n\t\t\tawait shopper.goToShop();\n\t\t\tawait shopper.addToCartFromShopPage( productId );\n\n\t\t\tawait shopper.goToCart();\n\t\t\tawait shopper.productIsInCart(simpleProductName);\n\t\t});\n\n\t\tit('should increase item qty when \"Add to cart\" of the same product is clicked', async () => {\n\t\t\tawait shopper.goToShop();\n\t\t\tawait shopper.addToCartFromShopPage( productId );\n\n\t\t\tawait shopper.goToCart();\n\t\t\tawait shopper.productIsInCart(simpleProductName, 2);\n\t\t});\n\n\t\tit('should update qty when updated via qty input', async () => {\n\t\t\tawait shopper.goToCart();\n\t\t\tawait shopper.setCartQuantity(simpleProductName, 4);\n\t\t\tawait expect(page).toClick('button', {text: 'Update cart'});\n\t\t\tawait uiUnblocked();\n\n\t\t\tawait shopper.productIsInCart(simpleProductName, 4);\n\t\t});\n\n\t\tit('should remove the item from the cart when remove is clicked', async () => {\n\t\t\tawait shopper.goToCart();\n\t\t\tawait shopper.removeFromCart( productId );\n\t\t\tawait uiUnblocked();\n\n\t\t\tawait expect(page).toMatchElement('.cart-empty', {text: 'Your cart is currently empty.'});\n\t\t});\n\n\t\tit('should update subtotal in cart totals when adding product to the cart', async () => {\n\t\t\tawait shopper.goToShop();\n\t\t\tawait shopper.addToCartFromShopPage( productId );\n\n\t\t\tawait shopper.goToCart();\n\t\t\tawait shopper.productIsInCart(simpleProductName, 1);\n\t\t\tawait expect(page).toMatchElement('.cart-subtotal .amount', {text: `$${ singleProductPrice }`});\n\n\t\t\tawait shopper.setCartQuantity(simpleProductName, 2);\n\t\t\tawait expect(page).toClick('button', {text: 'Update cart'});\n\t\t\tawait uiUnblocked();\n\n\t\t\tawait expect(page).toMatchElement('.cart-subtotal .amount', {text: `$${ twoProductPrice }`});\n\t\t});\n\n\t\tit('should go to the checkout page when \"Proceed to Checkout\" is clicked', async () => {\n\t\t\tawait shopper.goToCart();\n\t\t\tawait Promise.all([\n\t\t\t\tpage.waitForNavigation({waitUntil: 'networkidle0'}),\n\t\t\t\texpect(page).toClick('.checkout-button', {text: 'Proceed to checkout'}),\n\t\t\t]);\n\n\t\t\tawait expect(page).toMatchElement('#order_review');\n\t\t});\n\t});\n};\n\nmodule.exports = runCartPageTest;\n"]}