{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/api/coupon.test.js"],"names":["HTTPClientFactory","Coupon","require","config","it","describe","beforeAll","runCouponApiTest","client","percentageCoupon","coupon","repository","get","admin","url","build","withBasicAuth","username","password","withIndexPermalinks","create","restRepository","expect","toEqual","objectContaining","couponProperties","id","code","discount_type","discountType","amount","response","statusCode","toBe","data","updatedCouponProperties","free_shipping","update","status","delete","toBeTruthy","module","exports"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nconst { HTTPClientFactory, Coupon } = require( '@woocommerce/api' );\n\n/**\n * External dependencies\n */\nconst config = require( 'config' );\nconst { it, describe, beforeAll } = require( '@jest/globals' );\n\n/**\n * Create the default coupon and tests interactions with it via the API.\n */\nconst runCouponApiTest = () => {\n\tdescribe( 'REST API > Coupon', () => {\n\t\tlet client;\n\t\tlet percentageCoupon;\n\t\tlet coupon;\n\t\tlet repository;\n\n\t\tbeforeAll( async () => {\n\t\t\tpercentageCoupon = config.get( 'coupons.percentage' );\n\t\t\tconst admin = config.get( 'users.admin' );\n\t\t\tconst url = config.get( 'url' );\n\n\t\t\tclient = HTTPClientFactory.build( url )\n\t\t\t\t.withBasicAuth( admin.username, admin.password )\n\t\t\t\t.withIndexPermalinks()\n\t\t\t\t.create();\n\t\t} );\n\n\t\tit( 'can create a coupon', async () => {\n\t\t\trepository = Coupon.restRepository( client );\n\n\t\t\t// Check properties of the coupon in the create coupon response.\n\t\t\tcoupon = await repository.create( percentageCoupon );\n\t\t\texpect( coupon ).toEqual(\n\t\t\t\texpect.objectContaining( percentageCoupon )\n\t\t\t);\n\t\t} );\n\n\t\tit( 'can retrieve a coupon', async () => {\n\t\t\tconst couponProperties = {\n\t\t\t\tid: coupon.id,\n\t\t\t\tcode: percentageCoupon.code,\n\t\t\t\tdiscount_type: percentageCoupon.discountType,\n\t\t\t\tamount: percentageCoupon.amount,\n\t\t\t};\n\n\t\t\t// Read coupon directly from API to compare.\n\t\t\tconst response = await client.get(\n\t\t\t\t`/wc/v3/coupons/${ coupon.id }`\n\t\t\t);\n\t\t\texpect( response.statusCode ).toBe( 200 );\n\t\t\texpect( response.data ).toEqual(\n\t\t\t\texpect.objectContaining( couponProperties )\n\t\t\t);\n\t\t} );\n\n\t\tit( 'can update a coupon', async () => {\n\t\t\tconst updatedCouponProperties = {\n\t\t\t\tamount: '75.00',\n\t\t\t\tdiscount_type: 'fixed_cart',\n\t\t\t\tfree_shipping: true,\n\t\t\t};\n\n\t\t\tawait repository.update( coupon.id, updatedCouponProperties );\n\n\t\t\t// Check the coupon response for the updated values.\n\t\t\tconst response = await client.get(\n\t\t\t\t`/wc/v3/coupons/${ coupon.id }`\n\t\t\t);\n\t\t\texpect( response.statusCode ).toBe( 200 );\n\t\t\texpect( response.data ).toEqual(\n\t\t\t\texpect.objectContaining( updatedCouponProperties )\n\t\t\t);\n\t\t} );\n\n\t\tit( 'can delete a coupon', async () => {\n\t\t\t// Delete the coupon\n\t\t\tconst status = await repository.delete( coupon.id );\n\n\t\t\t// If the delete is successful, the response comes back truthy\n\t\t\texpect( status ).toBeTruthy();\n\t\t} );\n\t} );\n};\n\nmodule.exports = runCouponApiTest;\n"]}