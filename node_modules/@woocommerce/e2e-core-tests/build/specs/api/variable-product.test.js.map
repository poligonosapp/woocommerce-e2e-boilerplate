{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/api/variable-product.test.js"],"names":["HTTPClientFactory","VariableProduct","ProductVariation","require","config","it","describe","beforeAll","runVariableProductAPITest","client","defaultVariableProduct","defaultVariations","baseVariableProduct","product","variations","productRepository","variationRepository","get","admin","url","build","withBasicAuth","username","password","withIndexPermalinks","create","restRepository","expect","toEqual","objectContaining","v","length","variation","id","toBeGreaterThan","push","transformed","read","list","toHaveLength","variationId","pop","status","delete","toBeTruthy","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable jest/no-export, jest/no-disabled-tests */\n/**\n * Internal dependencies\n */\nconst { HTTPClientFactory, VariableProduct, ProductVariation } = require( '@woocommerce/api' );\n\n/**\n * External dependencies\n */\nconst config = require( 'config' );\nconst {\n\tit,\n\tdescribe,\n\tbeforeAll,\n} = require( '@jest/globals' );\n\n/**\n * Create a variable product and retrieve via the API.\n */\nconst runVariableProductAPITest = () => {\n\tdescribe('REST API > Variable Product', () => {\n\t\tlet client;\n\t\tlet defaultVariableProduct;\n\t\tlet defaultVariations;\n\t\tlet baseVariableProduct;\n\t\tlet product;\n\t\tlet variations = [];\n\t\tlet productRepository;\n\t\tlet variationRepository;\n\n\t\tbeforeAll(async () => {\n\t\t\tdefaultVariableProduct = config.get('products.variable');\n\t\t\tdefaultVariations = config.get('products.variations');\n\t\t\tconst admin = config.get('users.admin');\n\t\t\tconst url = config.get('url');\n\n\t\t\tclient = HTTPClientFactory.build(url)\n\t\t\t\t.withBasicAuth(admin.username, admin.password)\n\t\t\t\t.withIndexPermalinks()\n\t\t\t\t.create();\n\t\t});\n\n\t\tit('can create a variable product', async () => {\n\t\t\tproductRepository = VariableProduct.restRepository(client);\n\n\t\t\t// Check properties of product in the create product response.\n\t\t\tproduct = await productRepository.create(defaultVariableProduct);\n\t\t\texpect(product).toEqual(expect.objectContaining(defaultVariableProduct));\n\t\t});\n\n\t\tit('can add variations', async () => {\n\t\t\tvariationRepository = ProductVariation.restRepository(client);\n\t\t\tfor (let v = 0; v < defaultVariations.length; v++) {\n\t\t\t\tconst variation = await variationRepository.create(product.id, defaultVariations[v]);\n\t\t\t\t// Test that variation id is a number.\n\t\t\t\texpect(variation.id).toBeGreaterThan(0);\n\t\t\t\tvariations.push(variation.id);\n\t\t\t}\n\n\t\t\tbaseVariableProduct = {\n\t\t\t\tid: product.id,\n\t\t\t\t...defaultVariableProduct,\n\t\t\t\tvariations,\n\t\t\t};\n\t\t});\n\n\t\tit('can retrieve a transformed variable product', async () => {\n\t\t\t// Read product via the repository.\n\t\t\tconst transformed = await productRepository.read(product.id);\n\t\t\texpect(transformed).toEqual(expect.objectContaining(baseVariableProduct));\n\t\t});\n\n\t\tit('can retrieve transformed product variations', async () => {\n\t\t\t// Read variations via the repository.\n\t\t\tconst transformed = await variationRepository.list(product.id);\n\t\t\texpect(transformed).toHaveLength(defaultVariations.length);\n\t\t});\n\n\t\tit('can delete a variation', async () => {\n\t\t\tconst variationId = baseVariableProduct.variations.pop();\n\t\t\tconst status = variationRepository.delete(product.id, variationId);\n\t\t\texpect(status).toBeTruthy();\n\t\t});\n\n\t\tit('can delete a variable product', async () => {\n\t\t\tconst status = productRepository.delete(product.id);\n\t\t\texpect(status).toBeTruthy();\n\t\t});\n\t});\n}\n\nmodule.exports = runVariableProductAPITest;\n"]}