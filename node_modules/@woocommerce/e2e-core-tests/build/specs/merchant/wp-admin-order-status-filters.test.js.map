{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-core-tests/src/specs/merchant/wp-admin-order-status-filters.test.js"],"names":["merchant","withRestApi","clickFilter","moveAllItemsToTrash","require","statusColumnTextSelector","orderStatus","defaultOrder","payment_method","billing","first_name","last_name","email","runOrderStatusFiltersTest","describe","beforeAll","orders","map","entryPair","statusName","replace","status","batchCreateOrders","login","openAllOrdersView","afterAll","it","each","statusText","statusClassName","shownStatus","text","hiddenStatuses","filter","pair","includes","expect","page","toMatchElement","hiddenStatus","not","module","exports"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nconst {\n\tmerchant,\n\twithRestApi,\n\tclickFilter,\n\tmoveAllItemsToTrash,\n} = require( '@woocommerce/e2e-utils' );\n\nconst statusColumnTextSelector = 'mark.order-status > span';\n\n// Define order statuses to filter against\nconst orderStatus = [\n\t['Pending payment', 'wc-pending'],\n\t['Processing', 'wc-processing'],\n\t['On hold', 'wc-on-hold'],\n\t['Completed', 'wc-completed'],\n\t['Cancelled', 'wc-cancelled'],\n\t['Refunded', 'wc-refunded'],\n\t['Failed', 'wc-failed'],\n];\nconst defaultOrder = {\n\tpayment_method: 'cod',\n\tbilling: {\n\t\tfirst_name: 'John',\n\t\tlast_name: 'Doe',\n\t\temail: 'john.doe@example.com',\n\t}\n};\n\nconst runOrderStatusFiltersTest = () => {\n\tdescribe('WooCommerce Orders > Filter Orders by Status', () => {\n\t\tbeforeAll(async () => {\n\t\t\t// First, let's create some orders we can filter against\n\t\t\tconst orders = orderStatus.map((entryPair) => {\n\t\t\t\tconst statusName = entryPair[1].replace('wc-', '');\n\n\t\t\t\treturn {\n\t\t\t\t\t...defaultOrder,\n\t\t\t\t\tstatus: statusName,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// Create the orders using the API\n\t\t\tawait withRestApi.batchCreateOrders( orders, false );\n\n\t\t\t// Next, let's login and navigate to the Orders page\n\t\t\tawait merchant.login();\n\t\t\tawait merchant.openAllOrdersView();\n\t\t});\n\n\t\tafterAll( async () => {\n\t\t\t// Make sure we're on the all orders view and cleanup the orders we created\n\t\t\tawait merchant.openAllOrdersView();\n\t\t\tawait moveAllItemsToTrash();\n\t\t});\n\n\t\tit.each(orderStatus)('should filter by %s', async (statusText, statusClassName) => {\n\t\t\t// Identify which statuses should be shown or hidden\n\t\t\tconst shownStatus = { text: statusText };\n\t\t\tconst hiddenStatuses = orderStatus\n\t\t\t\t.filter((pair) => !pair.includes(statusText))\n\t\t\t\t.map(([statusText]) => {\n\t\t\t\t\treturn { text: statusText };\n\t\t\t\t});\n\n\t\t\t// Click the status filter and verify that only the matching order is shown\n\t\t\tawait clickFilter('.' + statusClassName);\n\t\t\tawait expect(page).toMatchElement(statusColumnTextSelector, shownStatus);\n\n\t\t\t// Verify other statuses don't show\n\t\t\tfor (const hiddenStatus of hiddenStatuses) {\n\t\t\t\tawait expect(page).not.toMatchElement(statusColumnTextSelector, hiddenStatus);\n\t\t\t}\n\t\t});\n\n\t\tit('should filter by All', async () => {\n\t\t\t// Make sure all the order statuses that were created show in this list\n\t\t\tawait clickFilter('.all');\n\n\t\t\tfor (const [statusText] of orderStatus) {\n\t\t\t\tawait expect(page).toMatchElement(statusColumnTextSelector, { text: statusText });\n\t\t\t}\n\t\t});\n\t});\n};\n\nmodule.exports = runOrderStatusFiltersTest;\n"]}